A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     1


MACRO ASSEMBLER A51 V8.00
OBJECT MODULE PLACED IN two-binary-watch.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE two-binary-watch.asm SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

0000                   1             ORG 00H
0000 2194              2             JMP MAIN
                       3     
0003                   4             ORG 03H
0003 01A6              5             JMP Setting_mode
                       6     
000B                   7             ORG 0BH
000B 8018              8             JMP Timer0_interrupt
                       9     
0013                  10             ORG 13H
0013 01BD             11             JMP Increase_time
                      12     
0023                  13             ORG 23H
0023 211D             14             JMP UART
                      15     
0025                  16     Timer0_interrupt:
0025 BF004E           17             CJNE R7,#0,reload_Timer0_1;2us
0028 12007E           18             LCALL Add_second;2us
002B 300039           19             JNB 20H.0,reload_Timer0_2;2us
002E 120087           20             LCALL Add_minute;2us
0031 300124           21             JNB 20H.1,reload_Timer0_3;2us
0034 120090           22             LCALL Add_hour;2us
0037 30020F           23             JNB 20H.2,reload_Timer0_4;2us
003A 7F14             24             MOV R7,#20;2us
003C 758C3C           25             MOV TH0,#HIGH (65536-50000+57);2us
003F 758AE9           26             MOV TL0,#LOW (65536-50000+57);2us
0042 120099           27             LCALL display_time;11us
0045 752000           28             MOV 20H,#0;2us
0048 32               29             RETI;2us
0049                  30     reload_Timer0_4:
0049 7F14             31             MOV R7,#20;2us
004B 758C3C           32             MOV TH0,#HIGH (65536-50000+54);2us
004E 758AE6           33             MOV TL0,#LOW (65536-50000+54);2us
0051 120099           34             LCALL display_time;11us
0054 752000           35             MOV 20H,#0;2us
0057 32               36             RETI;2us
0058                  37     reload_Timer0_3:
0058 7F14             38             MOV R7,#20;2us
005A 758C3C           39             MOV TH0,#HIGH (65536-50000+42);2us
005D 758ADA           40             MOV TL0,#LOW (65536-50000+42);2us
0060 120099           41             LCALL display_time;11us
0063 752000           42             MOV 20H,#0;2us
0066 32               43             RETI;2us
0067                  44     reload_Timer0_2:
0067 7F14             45             MOV R7,#20;2us
0069 758C3C           46             MOV TH0,#HIGH (65536-50000+30);2us
006C 758ACE           47             MOV TL0,#LOW (65536-50000+30);2us
006F 120099           48             LCALL display_time;11us
0072 752000           49             MOV 20H,#0;2us
0075 32               50             RETI;2us
0076                  51     reload_Timer0_1:                                   
0076 1F               52             DEC R7;1us
                      53             ;reload Timer0
0077 758C3C           54             MOV TH0,#HIGH (65536-50000+20);2us
007A 758AC4           55             MOV TL0,#LOW (65536-50000+20);2us
007D 32               56             RETI;2us
                      57     
                      58     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     2

                      59     ;subroutine name:Add_second
                      60     ;function: second+1. If second=60, clear second and set second overflow flag 20H.0
                      61     ;total: 8us
007E                  62     Add_second:
007E 08               63             INC R0;1us
007F B83C04           64             CJNE R0,#60,finish_add_second;2us
0082 7800             65             MOV R0,#0;2us
0084 D200             66             SETB 20H.0;1us
0086                  67     finish_add_second:
0086 22               68             RET;2us
                      69     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      70     
                      71     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      72     ;subroutine name:Add_minute
                      73     ;function: minute+1. If minute=60, clear minute and set minute overflow flag 20H.1
                      74     ;total: 8us
0087                  75     Add_minute:
0087 09               76             INC R1;1us
0088 B93C04           77             CJNE R1,#60,finish_add_minute;2us
008B 7900             78             MOV R1,#0;2us
008D D201             79             SETB 20H.1;1us
008F                  80     finish_add_minute:
008F 22               81             RET;2us
                      82     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      83     
                      84     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      85     ;subroutine name:Add_hour
                      86     ;function:hour+1. If hour=24, clear hour and set hour overflow flag 20H.2
                      87     ;total: 8us
0090                  88     Add_hour:
0090 0A               89             INC R2;1us
0091 BA1804           90             CJNE R2,#24,finish_add_hour;2us
0094 7A00             91             MOV R2,#0;2us
0096 D202             92             SETB 20H.2;1us
0098                  93     finish_add_hour:
0098 22               94             RET;2us
                      95     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      96     
                      97     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      98     ;subroutine name: display_time
                      99     ;function: display time that stored in R2(hour):R1(minute):R0(second)
                     100     ;total: 13us (include LCALL)
0099                 101     display_time:
0099 EA              102             MOV A,R2
009A F4              103             CPL A
009B F580            104             MOV P0,A
009D E9              105             MOV A,R1
009E F4              106             CPL A
009F F5A0            107             MOV P2,A
00A1 E8              108             MOV A,R0
00A2 F4              109             CPL A
00A3 F590            110             MOV P1,A
00A5 22              111             RET
                     112     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     113     
                     114     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00A6                 115     Setting_mode:
00A6 0E              116             INC R6
00A7 BE0102          117             CJNE R6,#1,begin_setting_mode
00AA C28C            118             CLR TR0
00AC                 119     begin_setting_mode:
00AC BE040D          120             CJNE R6,#4,finish_INT0
00AF 7E00            121             MOV R6,#0
00B1 758C3C          122             MOV TH0,#HIGH (65536-50000)
00B4 758AB0          123             MOV TL0,#LOW (65536-50000)
00B7 752000          124             MOV 20H,#0
A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     3

00BA D28C            125             SETB TR0
00BC                 126     finish_INT0:
00BC 32              127             RETI
                     128     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     129     
                     130     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00BD                 131     Increase_time:
00BD BE0001          132             CJNE R6,#0,determine_R6_1
00C0 32              133             RETI
00C1                 134     determine_R6_1:
00C1 BE0107          135             CJNE R6,#1,determine_R6_2
00C4 120090          136             LCALL Add_hour
00C7 120099          137             LCALL display_time
00CA 32              138             RETI
00CB                 139     determine_R6_2:
00CB BE0207          140             CJNE R6,#2,determine_R6_3
00CE 120087          141             LCALL Add_minute
00D1 120099          142             LCALL display_time
00D4 32              143             RETI
00D5                 144     determine_R6_3:
00D5 12007E          145             LCALL Add_second
00D8 120099          146             LCALL display_time
00DB 32              147             RETI
                     148     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     149     
                     150     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     151     ;subroutine name: delay_1ms
                     152     ;function: delay 1ms (include LCALL)
00DC                 153     Delay_1ms:
00DC C0E0            154             PUSH Acc
00DE 74C6            155             MOV A,#198
00E0 00              156     L1: NOP
00E1 00              157             NOP
00E2 00              158             NOP
00E3 D5E0FA          159             DJNZ Acc,L1
00E6 D0E0            160             POP Acc
00E8 22              161             RET
                     162     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     163     
                     164     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     165     ;subroutine name: delay_01s
                     166     ;function: delay 0.1s (include LCALL)
00E9                 167     Delay_01s:
00E9 C0F0            168             PUSH B
00EB 75F063          169             MOV B,#99
00EE 1200DC          170     L2: LCALL Delay_1ms
00F1 00              171             NOP
00F2 00              172             NOP
00F3 00              173             NOP
00F4 00              174             NOP
00F5 00              175             NOP
00F6 00              176             NOP
00F7 00              177             NOP
00F8 00              178             NOP
00F9 D5F0F2          179             DJNZ B,L2
00FC D0F0            180             POP B
00FE 22              181             RET
                     182     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     183     
                     184     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     185     ;subroutine name: ASCII2binary
                     186     ;function: convert ASCII to binary
                     187     ;input:    19H:18H
                     188     ;output:   17H
00FF                 189     ASCII2binary:
00FF C0E0            190             PUSH Acc
A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     4

0101 C0F0            191             PUSH B
                     192             ;
0103 E519            193             MOV A,19H
0105 540F            194             ANL A,#00001111B
0107 75F00A          195             MOV B,#10
010A A4              196             MUL AB
010B F519            197             MOV 19H,A
                     198             ;
010D E518            199             MOV A,18H
010F 540F            200             ANL A,#00001111B
                     201             ;
0111 8519F0          202             MOV B,19H
0114 25F0            203             ADD A,B
0116 F517            204             MOV 17H,A
                     205             ;
0118 D0F0            206             POP B
011A D0E0            207             POP Acc
011C 22              208             RET
                     209     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
                     210     
                     211     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
011D                 212     UART:
011D 209971          213             JB TI,UART_finish
0120 C298            214             CLR RI
                     215             ;
0122 BD0003          216             CJNE R5,#0,determine_R5_1
0125 C28C            217             CLR TR0
0127 0D              218             INC R5
0128                 219     determine_R5_1:
0128 BD0107          220             CJNE R5,#1,determine_R5_2
012B 0D              221             INC R5
012C E599            222             MOV A,SBUF
012E F51F            223             MOV 1FH,A
0130 805F            224             JMP UART_finish
0132                 225     determine_R5_2:
0132 BD0214          226             CJNE R5,#2,determine_R5_3
0135 0D              227             INC R5
0136 E599            228             MOV A,SBUF
0138 F51E            229             MOV 1EH,A
                     230             ;
013A E51F            231             MOV A,1FH
013C F519            232             MOV 19H,A
013E E51E            233             MOV A,1EH
0140 F518            234             MOV 18H,A
0142 1200FF          235             LCALL ASCII2binary
0145 AA17            236             MOV R2,17H
                     237             ;
0147 8048            238             JMP UART_finish
0149                 239     determine_R5_3:
0149 BD0307          240             CJNE R5,#3,determine_R5_4
014C 0D              241             INC R5
014D E599            242             MOV A,SBUF
014F F51D            243             MOV 1DH,A
0151 803E            244             JMP UART_finish
0153                 245     determine_R5_4:
0153 BD0414          246             CJNE R5,#4,determine_R5_5
0156 0D              247             INC R5
0157 E599            248             MOV A,SBUF
0159 F51C            249             MOV 1CH,A
                     250             ;
015B E51D            251             MOV A,1DH
015D F519            252             MOV 19H,A
015F E51C            253             MOV A,1CH
0161 F518            254             MOV 18H,A
0163 1200FF          255             LCALL ASCII2binary
0166 A917            256             MOV R1,17H
A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     5

                     257             ;
0168 8027            258             JMP UART_finish
016A                 259     determine_R5_5:
016A BD0507          260             CJNE R5,#5,determine_R5_6
016D 0D              261             INC R5
016E E599            262             MOV A,SBUF
0170 F51B            263             MOV 1BH,A
0172 801D            264             JMP UART_finish
0174                 265     determine_R5_6:
0174 7D00            266             MOV R5,#0
0176 E599            267             MOV A,SBUF
0178 F51A            268             MOV 1AH,A
                     269             ;
017A E51B            270             MOV A,1BH
017C F519            271             MOV 19H,A
017E E51A            272             MOV A,1AH
0180 F518            273             MOV 18H,A
0182 1200FF          274             LCALL ASCII2binary
0185 A817            275             MOV R0,17H
                     276             ;
0187                 277     begin_time:
0187 7F14            278             MOV R7,#20
0189 758C3C          279             MOV TH0,#HIGH (65536-50000)
018C 758AB0          280             MOV TL0,#LOW (65536-50000)
018F D28C            281             SETB TR0        
0191                 282     UART_finish:
0191 C299            283             CLR TI
0193 32              284             RETI
                     285     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                     286             
                     287     
                     288     
0194                 289     MAIN:
                     290             ;use R5 to conut number of receiving from UART
0194 7D00            291             MOV R5,#0
                     292             ;use R6 to count number of INT0
0196 7E00            293             MOV R6,#0
                     294             ;use R0 to store second
0198 7800            295             MOV R0,#0
                     296             ;use R1 to store minute
019A 7900            297             MOV R1,#0
                     298             ;use R2 to store hour
019C 7A00            299             MOV R2,#0
                     300             ;set serial port
019E C29F            301             CLR SM0
01A0 D29E            302             SETB SM1
01A2 C29D            303             CLR SM2
01A4 D29C            304             SETB REN
01A6 53877F          305             ANL PCON,#01111111B
                     306             ;set bound rate
01A9 758921          307             MOV TMOD,#00100001B
01AC 758DF3          308             MOV TH1,#0F3H
01AF D28E            309             SETB TR1
01B1 D2AC            310             SETB ES
                     311             ;set INT0 and INT1
01B3 D2A8            312             SETB EX0
01B5 D288            313             SETB IT0
01B7 D2AA            314             SETB EX1
01B9 D28A            315             SETB IT1
                     316             ;set Timer0 50000us
01BB 758C3C          317             MOV TH0,#HIGH (65536-50000)
01BE 758AB0          318             MOV TL0,#LOW (65536-50000)
01C1 D28C            319             SETB TR0
01C3 D2BC            320             SETB PS
                     321             ;use R7 to count time
01C5 7F14            322             MOV R7,#20
A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     6

                     323             ;set interrupt
01C7 D2A9            324             SETB ET0
01C9 D2AF            325             SETB EA
                     326             ;display initial time
01CB 120099          327             LCALL display_time
01CE                 328     shine_display:
01CE BE0005          329             CJNE R6,#0,determine_R6_1_shine
01D1 120099          330             LCALL display_time
01D4 80F8            331             JMP shine_display
01D6                 332     determine_R6_1_shine:
01D6 BE010E          333             CJNE R6,#1,determine_R6_2_shine
01D9 1200E9          334             LCALL delay_01s
01DC 120099          335             LCALL display_time
01DF 1200E9          336             LCALL delay_01s
01E2 7580FF          337             MOV P0,#0FFH
01E5 80E7            338             JMP shine_display
01E7                 339     determine_R6_2_shine:
01E7 BE020E          340             CJNE R6,#2,determine_R6_3_shine
01EA 1200E9          341             LCALL delay_01s
01ED 120099          342             LCALL display_time
01F0 1200E9          343             LCALL delay_01s
01F3 75A0FF          344             MOV P2,#0FFH
01F6 80D6            345             JMP shine_display
01F8                 346     determine_R6_3_shine:
01F8 1200E9          347             LCALL delay_01s
01FB 120099          348             LCALL display_time
01FE 1200E9          349             LCALL delay_01s
0201 7590FF          350             MOV P1,#0FFH
0204 80C8            351             JMP shine_display
                     352             END
A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E               T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . . .  D ADDR   00E0H   A   
ADD_HOUR . . . . . .  C ADDR   0090H   A   
ADD_MINUTE . . . . .  C ADDR   0087H   A   
ADD_SECOND . . . . .  C ADDR   007EH   A   
ASCII2BINARY . . . .  C ADDR   00FFH   A   
B. . . . . . . . . .  D ADDR   00F0H   A   
BEGIN_SETTING_MODE .  C ADDR   00ACH   A   
BEGIN_TIME . . . . .  C ADDR   0187H   A   
DELAY_01S. . . . . .  C ADDR   00E9H   A   
DELAY_1MS. . . . . .  C ADDR   00DCH   A   
DETERMINE_R5_1 . . .  C ADDR   0128H   A   
DETERMINE_R5_2 . . .  C ADDR   0132H   A   
DETERMINE_R5_3 . . .  C ADDR   0149H   A   
DETERMINE_R5_4 . . .  C ADDR   0153H   A   
DETERMINE_R5_5 . . .  C ADDR   016AH   A   
DETERMINE_R5_6 . . .  C ADDR   0174H   A   
DETERMINE_R6_1 . . .  C ADDR   00C1H   A   
DETERMINE_R6_1_SHINE  C ADDR   01D6H   A   
DETERMINE_R6_2 . . .  C ADDR   00CBH   A   
DETERMINE_R6_2_SHINE  C ADDR   01E7H   A   
DETERMINE_R6_3 . . .  C ADDR   00D5H   A   
DETERMINE_R6_3_SHINE  C ADDR   01F8H   A   
DISPLAY_TIME . . . .  C ADDR   0099H   A   
EA . . . . . . . . .  B ADDR   00A8H.7 A   
ES . . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . . .  B ADDR   00A8H.1 A   
EX0. . . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . . .  B ADDR   00A8H.2 A   
FINISH_ADD_HOUR. . .  C ADDR   0098H   A   
FINISH_ADD_MINUTE. .  C ADDR   008FH   A   
FINISH_ADD_SECOND. .  C ADDR   0086H   A   
FINISH_INT0. . . . .  C ADDR   00BCH   A   
INCREASE_TIME. . . .  C ADDR   00BDH   A   
IT0. . . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . . .  B ADDR   0088H.2 A   
L1 . . . . . . . . .  C ADDR   00E0H   A   
L2 . . . . . . . . .  C ADDR   00EEH   A   
MAIN . . . . . . . .  C ADDR   0194H   A   
P0 . . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . . .  D ADDR   00A0H   A   
PCON . . . . . . . .  D ADDR   0087H   A   
PS . . . . . . . . .  B ADDR   00B8H.4 A   
RELOAD_TIMER0_1. . .  C ADDR   0076H   A   
RELOAD_TIMER0_2. . .  C ADDR   0067H   A   
RELOAD_TIMER0_3. . .  C ADDR   0058H   A   
RELOAD_TIMER0_4. . .  C ADDR   0049H   A   
REN. . . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . . .  B ADDR   0098H.0 A   
SBUF . . . . . . . .  D ADDR   0099H   A   
SETTING_MODE . . . .  C ADDR   00A6H   A   
SHINE_DISPLAY. . . .  C ADDR   01CEH   A   
SM0. . . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . . .  B ADDR   0098H.5 A   
TH0. . . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . . .  D ADDR   008DH   A   
TI . . . . . . . . .  B ADDR   0098H.1 A   
TIMER0_INTERRUPT . .  C ADDR   0025H   A   
TL0. . . . . . . . .  D ADDR   008AH   A   
A51 MACRO ASSEMBLER  TWO_BINARY_WATCH                                                     04/05/2013 21:03:17 PAGE     8

TMOD . . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . . .  B ADDR   0088H.6 A   
UART . . . . . . . .  C ADDR   011DH   A   
UART_FINISH. . . . .  C ADDR   0191H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
